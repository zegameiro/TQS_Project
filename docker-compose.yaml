version: '3'

services:

  database:

    image: postgres:16.2

    container_name: "beauty_plaza_db"

    environment:
      POSTGRES_DB: beauty_plaza
      POSTGRES_PASSWORD: password_tqs

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 15s
      retries: 5

    restart: unless-stopped

    volumes: 
      - pg_data:/var/lib/postgresql/data

    networks:
      - backend

  backend:

    depends_on:
      database:
        condition: service_healthy

    build: 
      context: ./backend
      dockerfile: Dockerfile

    container_name: "beauty_plaza_backend"

    restart: unless-stopped

    volumes:
      - ./backend:/backend

    ports:
      - "8080:8080"
    
    networks:
      - backend

  customer_portal_app:

    depends_on:
      - backend

    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

    build: 
      context: ./customer_frontend
      dockerfile: Dockerfile

    container_name: "beauty_plaza_customer_portal"

    restart: unless-stopped

    volumes:
      - ./customer_frontend:/customer_frontend

    ports:
      - "3001:3001"

    networks:
      - frontend

  staff_portal_app:

    depends_on:
      - backend

    build: 
      context: ./staff_frontend
      dockerfile: Dockerfile

    container_name: "beauty_plaza_staff_portal"

    restart: unless-stopped

    volumes:
      - ./staff_frontend:/staff_frontend

    ports:
      - "3002:3002"

    networks:
      - frontend

  screens_app:

    depends_on:
      - backend

    build:
      context: ./screens_frontend
      dockerfile: Dockerfile
    
    container_name: "beauty_plaza_screens"

    restart: unless-stopped

    volumes:
      - ./screens_frontend:/screens_frontend

    ports:
      - "3003:3003"

    networks:
      - frontend

  nginx:

    image: nginx:latest

    ports: 
      - "80:80"

    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

    depends_on:
      - customer_portal_app
      - staff_portal_app
      - screens_app

    restart: unless-stopped

    networks:
      - frontend

volumes:
  pg_data:

networks:

  backend:
    driver: bridge

  frontend:
    driver: bridge

    
